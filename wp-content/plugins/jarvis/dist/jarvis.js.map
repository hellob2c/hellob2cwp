{"version":3,"sources":["jarvis.js"],"names":["Jarvis","$","_","Bloodhound","i","arguments","length","test","_typeof","console","error","concat","inputFocused","document","activeElement","tagName","contentEditable","iconStore","store","attachment","type","icon","category","nav_menu","nav_menu_item","page","post","post_tag","key","remove","post_format","this","Suggestion","data","undefined","_classCallCheck","attributes","classes","href","iconKey","iconStyle","iconType","kind","get","prefix","section","title","hasOwnProperty","prop","indexOf","push","add","setIcon","_createClass","value","storedIcon","iconClasses","MenuSuggestion","_Suggestion","_inherits","_super","_createSuper","link","_this","call","jQuery","closest","first","find","clone","children","end","text","$wpMenuIcon","$wpMenuLink","linkHref","attr","params","substr","split","pairs","computedStyle","window","getComputedStyle","backgroundImage","atob","replace","hasClass","fontFamily","trim","filter","c","shift","style","getElementById","createElement","id","head","appendChild","css","content","createTextNode","templates","_this2","instants","hotkey","searchurl","settings","s","opened","ctrlKey","node","className","theme","modal","overlay","addEventListener","close","search","loading","isJarvisUrl","url","matches","URL","location","origin","pathname","match","readyState","init","bind","_this3","each","elem","suggestions","Array","isArray","map","inst","e","preventDefault","stopPropagation","open","on","currentTarget","getAttribute","event","jqXHR","setRequestHeader","ajaxComplete","parentNode","removeChild","display","body","$search","typeahead","hint","highlight","minLength","classNames","cursor","dataset","empty","input","selectable","suggestion","wrapper","name","limit","source","local","obj","whitespace","queryTokenizer","tokenizers","remote","transform","response","item","term","focus","select","_this5","ajax","status"],"mappings":"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","file":"jarvis.js","sourcesContent":["const Jarvis = ( function( $, _, Bloodhound ) {\r\n\r\n\t// cut the mustard - bail if any of our dependencies are missing\r\n\tfor( let i = 0; i < arguments.length; i++ ) {\r\n\t\tif ( ! /function|object/.test( typeof arguments[i] ) ) {\r\n\t\t\tif ( typeof console === 'object' && typeof console.error === 'function' ) {\r\n\t\t\t\tconsole.error( `Jarvis dependency is missing: ${arguments[i]}` );\r\n\t\t\t}\r\n\t\t\treturn function() {};\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * function for determining if the quick key should fire\r\n\t */\r\n\tconst inputFocused = function() {\r\n\t\treturn /INPUT|SELECT|TEXTAREA/.test( document.activeElement.tagName ) || document.activeElement.contentEditable === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Object to store icons data by key\r\n\t */\r\n\tlet iconStore = {\r\n\t\tstore: {\r\n\t\t\tattachment: {\r\n\t\t\t\ttype: 'dashicon',\r\n\t\t\t\ticon: 'dashicons-admin-media',\r\n\t\t\t},\r\n\t\t\tcategory: {\r\n\t\t\t\ttype: 'dashicon',\r\n\t\t\t\ticon: 'dashicons-category',\r\n\t\t\t},\r\n\t\t\tnav_menu: {\r\n\t\t\t\ttype: 'dashicon',\r\n\t\t\t\ticon: 'dashicons-menu',\r\n\t\t\t},\r\n\t\t\tnav_menu_item: {\r\n\t\t\t\ttype: 'dashicon',\r\n\t\t\t\ticon: 'dashicons-admin-appearance',\r\n\t\t\t},\r\n\t\t\tpage: {\r\n\t\t\t\ttype: 'dashicon',\r\n\t\t\t\ticon: 'dashicons-admin-page',\r\n\t\t\t},\r\n\t\t\tpost: {\r\n\t\t\t\ttype: 'dashicon',\r\n\t\t\t\ticon: 'dashicons-admin-post',\r\n\t\t\t},\r\n\t\t\tpost_tag: {\r\n\t\t\t\ttype: 'dashicon',\r\n\t\t\t\ticon: 'dashicons-tag',\r\n\t\t\t},\r\n\t\t\tpost_format: {\r\n\t\t\t\ttype: 'dashicon',\r\n\t\t\t\ticon: 'dashicons-format-standard',\r\n\t\t\t},\r\n\t\t\tterm: {\r\n\t\t\t\ttype: 'dashicon',\r\n\t\t\t\ticon: 'dashicons-category',\r\n\t\t\t},\r\n\t\t\tuser: {\r\n\t\t\t\ttype: 'dashicon',\r\n\t\t\t\ticon: 'dashicons-admin-users',\r\n\t\t\t},\r\n\t\t},\r\n\r\n\t\tadd: function( key, type, icon ) {\r\n\t\t\tif ( ! this.store[ key ] ) {\r\n\t\t\t\tthis.store[ key ] = {\r\n\t\t\t\t\ttype: type,\r\n\t\t\t\t\ticon: icon,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn this.store[ key ];\r\n\t\t},\r\n\r\n\t\tremove: function( key ) {\r\n\t\t\tif ( this.store[ key ] ) {\r\n\t\t\t\tdelete this.store[ key ];\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tget: function( key ) {\r\n\t\t\treturn ( typeof this.store[key] === 'object' ) ? this.store[key] : false;\r\n\t\t},\r\n\t};\r\n\r\n\tclass Suggestion {\r\n\r\n\t\t/**\r\n\t\t * Base Suggestion class constrcutor that contains the suggestion model\r\n\t\t *\r\n\t\t * @param object data\r\n\t\t * @param string type\r\n\t\t */\r\n\t\tconstructor( data = {}, type = '' ) {\r\n\t\t\tthis.attributes  = [];\r\n\t\t\tthis.classes     = [];\r\n\t\t\tthis.href        = '';\r\n\t\t\tthis.icon        = null;\r\n\t\t\tthis.iconClasses = [ 'jarvis__icon' ];\r\n\t\t\tthis.iconKey     = '';\r\n\t\t\tthis.iconStyle   = '';\r\n\t\t\tthis.iconType    = 'dashicon';\r\n\t\t\tthis.kind        = '';\r\n\t\t\tthis.prefix      = '';\r\n\t\t\tthis.section     = '';\r\n\t\t\tthis.title       = '';\r\n\t\t\tthis.type        = '';\r\n\r\n\t\t\tfor ( let prop in data ) {\r\n\t\t\t\tif ( data.hasOwnProperty( prop ) ) {\r\n\t\t\t\t\tthis[prop] = data[prop];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ( typeof this.type === 'string' && this.type.length > 0 && this.attributes.indexOf( this.type ) === -1 ) {\r\n\t\t\t\tthis.attributes.push( this.type );\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.iconKey && this.iconType && this.icon && ! iconStore.get( this.iconKey ) ) {\r\n\t\t\t\ticonStore.add( this.iconKey, this.iconType, this.icon );\r\n\t\t\t}\r\n\r\n\t\t\tthis.setIcon( this.iconKey );\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Set the icon of this suggestion to the icon key in the icon store\r\n\t\t *\r\n\t\t * @param string iconKey\r\n\t\t */\r\n\t\tsetIcon( iconKey = '' ) {\r\n\t\t\t// image icon - usually unique per suggestion - no reason to cache it\r\n\t\t\tif ( this.iconType === 'image' && this.icon ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! iconStore.get( iconKey ) && this.kind ) {\r\n\t\t\t\tswitch( this.kind ) {\r\n\t\t\t\t\tcase 'term':\r\n\t\t\t\t\t\ticonKey = 'post_tag';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'post':\r\n\t\t\t\t\t\ticonKey = 'post';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'user':\r\n\t\t\t\t\t\ticonKey = 'user';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet storedIcon = iconStore.get( iconKey );\r\n\r\n\t\t\tif ( storedIcon ) {\r\n\t\t\t\tthis.iconKey  = iconKey;\r\n\t\t\t\tthis.iconType = storedIcon.type;\r\n\t\t\t\tthis.icon     = storedIcon.icon;\r\n\r\n\t\t\t\tif ( this.iconType === 'dashicon' ) {\r\n\t\t\t\t\tthis.iconClasses.push( 'dashicons-before' );\r\n\r\n\t\t\t\t\tif ( this.iconClasses.indexOf( this.icon ) === -1 ) {\r\n\t\t\t\t\t\tthis.iconClasses.push( this.icon );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this.icon;\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tclass MenuSuggestion extends Suggestion {\r\n\t\t/**\r\n\t\t * Heavily modify the base suggestion model for menu items\r\n\t\t */\r\n\t\tconstructor( link ) {\r\n\t\t\tsuper();\r\n\r\n\t\t\tthis.link    = link;\r\n\t\t\tthis.section = jQuery( this.link ).closest( 'li.menu-top' ).first();\r\n\t\t\tthis.prefix  = this.section.find( '.wp-menu-name' ).clone().children().remove().end().text();\r\n\t\t\tthis.kind    = 'menu';\r\n\t\t\tthis.type    = this.kind;\r\n\t\t\tthis.href    = link.href;\r\n\r\n\t\t\tthis.attributes.push( this.type );\r\n\t\t\tthis.classes.push( `jarvis__suggestion--${this.kind}`);\r\n\r\n\t\t\tif ( jQuery( this.link ).is( '.wp-submenu a' ) ) {\r\n\t\t\t\tthis.title = `${this.prefix} » ${jQuery( this.link ).clone().children().remove().end().text()}`;\r\n\t\t\t} else {\r\n\t\t\t\tthis.title = this.prefix;\r\n\t\t\t}\r\n\r\n\t\t\tlet $wpMenuIcon = this.section.find( '.wp-menu-image' ).first();\r\n\r\n\t\t\t// try and get the icon key from the top level link post_type= param of the link href so it matches up to remote data\r\n\t\t\tlet $wpMenuLink = this.section.find('> a').first();\r\n\t\t\tif ( $wpMenuLink.length > 0 ) {\r\n\t\t\t\tlet linkHref = $wpMenuLink.attr('href');\r\n\t\t\t\tlet qsIndex = linkHref.indexOf('?');\r\n\r\n\t\t\t\tif ( qsIndex > -1 ) {\r\n\t\t\t\t\tlet qs = linkHref.substr( linkHref.indexOf('?') + 1 );\r\n\t\t\t\t\tlet params = qs.split(\"&\");\r\n\r\n\t\t\t\t\tfor ( let i = 0; i < params.length; i++ ) {\r\n\t\t\t\t\t\tlet pairs = params[i].split('=');\r\n\t\t\t\t\t\tif ( pairs.length === 2 && pairs[0] === 'post_type' && pairs[1].length > 0 ) {\r\n\t\t\t\t\t\t\tthis.iconKey = pairs[1];\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! this.iconKey ) {\r\n\t\t\t\tthis.iconKey = this.section.attr('id');\r\n\t\t\t}\r\n\r\n\t\t\tthis.classes.push( `jarvis__suggestion--${this.iconKey}`);\r\n\r\n\t\t\tif ( $wpMenuIcon.length > 0 ) {\r\n\t\t\t\tif ( ! iconStore.get( this.iconKey ) ) {\r\n\t\t\t\t\tlet computedStyle;\r\n\r\n\t\t\t\t\tswitch( true ) {\r\n\t\t\t\t\t\tcase this.section.find('.wp-menu-image img').length > 0:\r\n\t\t\t\t\t\t\t// img tag inside icon - old school\r\n\t\t\t\t\t\t\tthis.iconType = 'image';\r\n\t\t\t\t\t\t\tthis.icon = this.section.find('.wp-menu-image img').first().attr('src');\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase $wpMenuIcon.hasClass( 'svg' ):\r\n\t\t\t\t\t\t\t// base64 encoded svg\r\n\t\t\t\t\t\t\tcomputedStyle = window.getComputedStyle( $wpMenuIcon.get( 0 ) );\r\n\t\t\t\t\t\t\tif ( /^url\\(\"data:image\\/svg\\+xml\\;base64,/.test( computedStyle.backgroundImage ) ) {\r\n\t\t\t\t\t\t\t\tthis.iconType = 'svg';\r\n\t\t\t\t\t\t\t\tthis.icon  = atob( computedStyle.backgroundImage.replace( /^url\\(\"data:image\\/svg\\+xml\\;base64,/, '' ).replace( /\\\"\\)$/, '' ) );\r\n\t\t\t\t\t\t\t\tthis.icon  = this.icon.replace( /<\\?xml [^>]+\\?>/g, '' ).replace( /\\sid=\"[^\\\"]+\"/g, '' ).replace( /<!--[\\s\\S]*?-->/g, '' ).replace( /<(title|desc|defs)>[^<]+?<\\/(title|desc|defs)>/g, '' );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase $wpMenuIcon.hasClass( 'dashicons-before' ):\r\n\r\n\t\t\t\t\t\t\tcomputedStyle = window.getComputedStyle( $wpMenuIcon.get( 0 ), ':before' );\r\n\r\n\t\t\t\t\t\t\tif ( computedStyle.fontFamily === 'dashicons' ) {\r\n\t\t\t\t\t\t\t\t// proper dashicon\r\n\t\t\t\t\t\t\t\tthis.iconType = 'dashicon';\r\n\t\t\t\t\t\t\t\tthis.icon = $wpMenuIcon.attr('class').trim().split(' ').filter( c => [ 'dashicons-before', 'wp-menu-image' ].indexOf(c) === -1 ).shift();\r\n\t\t\t\t\t\t\t\tthis.iconClasses.push( this.icon );\r\n\t\t\t\t\t\t\t\tthis.iconClasses.push( 'dashicons-before' );\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// custom icons on top of a dashicon using css (woocommerce does this)\r\n\t\t\t\t\t\t\t\tlet style = document.getElementById( 'jarvis_style' );\r\n\t\t\t\t\t\t\t\tif ( ! style ) {\r\n\t\t\t\t\t\t\t\t\tstyle = document.createElement('style');\r\n\t\t\t\t\t\t\t\t\tstyle.type = 'text/css';\r\n\t\t\t\t\t\t\t\t\tstyle.id = 'jarvis_style';\r\n\t\t\t\t\t\t\t\t\tdocument.head.appendChild(style);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tlet css = `.jarvis__suggestion--${this.iconKey} .jarvis__icon::before { font-family: ${computedStyle.fontFamily}; content: ${computedStyle.content}; }` + \"\\n\";\r\n\r\n\t\t\t\t\t\t\t\tstyle.appendChild( document.createTextNode(css) );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ticonStore.add( this.iconKey, this.iconType, this.icon );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.setIcon( this.iconKey );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * underscore template for typeahead suggestion\r\n\t */\r\n\tconst templates = {\r\n\t\tsuggestion: _.template( `\r\n\t\t\t<span class=\"<% print( classes.join( ' ' ) ) %>\">\r\n\t\t\t\t<a href=\"<%= href %>\" data-type=\"<%= type %>\">\r\n\t\t\t\t\t<span class=\"<% print( iconClasses.join( ' ' ) ) %>\" style='<%= iconStyle %>' title=\"<%= prefix %>\">\r\n\t\t\t\t\t<% if ( iconType === 'image' ) { %>\r\n\t\t\t\t\t\t<img src=\"<%= icon %>\" alt=\"<%= title %>\">\r\n\t\t\t\t\t<% } else if ( iconType === 'svg' ) { %>\r\n\t\t\t\t\t\t<%= icon %>\r\n\t\t\t\t\t<% } %>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class=\"jarvis__title\" title=\"<%- title %>\"><%- title %></span>\r\n\t\t\t\t\t<% if ( attributes ) { %>\r\n\t\t\t\t\t\t<span class=\"jarvis__pills\">\r\n\t\t\t\t\t\t\t<% _.each( attributes, function(attr) { %>\r\n\t\t\t\t\t\t\t\t<span class=\"jarvis__pill\"><%= attr %></span>\r\n\t\t\t\t\t\t\t<% } ); %>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t<% } %>\r\n\t\t\t\t</a>\r\n\t\t\t</span>\r\n\t\t`)\r\n\t};\r\n\r\n\tclass Jarvis {\r\n\t\t/**\r\n\t\t * The main interface to Jarvis\r\n\t\t *\r\n\t\t * @param object settings\r\n\t\t * @param array instants\r\n\t\t */\r\n\t\tconstructor( settings = {}, instants = [] ) {\r\n\r\n\t\t\tthis.iconStore = iconStore;\r\n\r\n\t\t\t// default settings\r\n\t\t\tthis.settings = {\r\n\t\t\t\thotkey: '/',\r\n\t\t\t\tsearchurl: '/wp-json/jarvis/v1/search',\r\n\t\t\t};\r\n\r\n\t\t\t// merge constructor settings with defaults\r\n\t\t\tfor( const s in settings ) {\r\n\t\t\t\tif ( settings.hasOwnProperty( s ) ) {\r\n\t\t\t\t\tthis.settings[ s ] = settings[ s ];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// internal flag for modal open/close\r\n\t\t\tthis.opened = false;\r\n\r\n\t\t\t// array for storing wordpress links as datums for autocomplete\r\n\t\t\tthis.suggestions = [];\r\n\r\n\t\t\t// hold the instant suggestions to get processed after the menu links\r\n\t\t\tthis.instants = instants;\r\n\r\n\t\t\t// the current search term to re-open the modal with the same term\r\n\t\t\tthis.term = '';\r\n\r\n\t\t\t// flag for whether the ctrlKey is currently pressed\r\n\t\t\tthis.ctrlKey = false;\r\n\r\n\t\t\t// outer jarvis node\r\n\t\t\tthis.node = document.createElement( 'div' );\r\n\t\t\tthis.node.className = `jarvis jarvis--${this.settings.theme}`;\r\n\t\t\tthis.node.id = 'jarvis';\r\n\r\n\t\t\t// modal node\r\n\t\t\tthis.modal = document.createElement( 'div' );\r\n\t\t\tthis.modal.className = 'jarvis__modal';\r\n\r\n\t\t\t// modal overlay node\r\n\t\t\tthis.overlay = document.createElement( 'div' );\r\n\t\t\tthis.overlay.className = 'jarvis__overlay';\r\n\t\t\tthis.overlay.addEventListener( 'click', () => this.close() );\r\n\r\n\t\t\t// search input node\r\n\t\t\tthis.search = document.createElement( 'input' );\r\n\t\t\tthis.search.type = 'text';\r\n\t\t\tthis.$search = $( this.search ); // jquery version for typeahead\r\n\r\n\t\t\t// add our internal nodes to the outer node\r\n\t\t\tthis.node.appendChild( this.overlay );\r\n\t\t\tthis.node.appendChild( this.modal );\r\n\t\t\tthis.modal.appendChild( this.search );\r\n\r\n\t\t\t// loading icon node\r\n\t\t\tthis.loading = document.createElement( 'i' );\r\n\t\t\tthis.loading.className = 'jarvis__loading';\r\n\r\n\t\t\t// does the url argument match the searchurl\r\n\t\t\tthis.isJarvisUrl = function( url ) {\r\n\t\t\t\tconst matches = ( new URL( url, location.origin ) ).pathname.match( /^\\/wp-json\\/jarvis\\// );\r\n\t\t\t\treturn matches && matches.length > 0;\r\n\t\t\t}\r\n\r\n\t\t\t// test if constructor was called after the page is loaded, or on DOMContentLoaded\r\n\t\t\tif ( /complete|loaded/.test( document.readyState ) ) {\r\n\t\t\t\tthis.init();\r\n\t\t\t} else {\r\n\t\t\t\tdocument.addEventListener( 'DOMContentLoaded', this.init.bind( this ) );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tinit() {\r\n\t\t\t// scrape wordpress menu for sidebar links\r\n\t\t\t$( '#adminmenu a' ).each( ( i, elem ) => {\r\n\t\t\t\tthis.suggestions.push( new MenuSuggestion( elem ) );\r\n\t\t\t\treturn;\r\n\t\t\t} );\r\n\r\n\t\t\t// process the instant suggestions after the icons have been scraped\r\n\t\t\tif ( Array.isArray( this.instants ) ) {\r\n\t\t\t\tthis.suggestions = this.suggestions.concat( this.instants.map( inst => new Suggestion(inst) ) );\r\n\t\t\t}\r\n\r\n\t\t\t// Prevent Firefox from using quick search with the hotkey\r\n\t\t\tdocument.addEventListener( 'keydown', ( e ) => {\r\n\t\t\t\tif ( e.key === this.settings.hotkey && ! inputFocused() ) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t}\r\n\t\t\t}, true ); // use true for event capture\r\n\r\n\t\t\t// menu bar icon click\r\n\t\t\t$( document ).on( 'click', '#wp-admin-bar-jarvis_menubar_icon a', ( e ) => {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tthis.open();\r\n\t\t\t} );\r\n\r\n\t\t\t// let the typeahead:selected event handle ctrl+click so it's consistent with keyboard ctrl+enter\r\n\t\t\t// prevent default for ajax actions\r\n\t\t\t$( document ).on( 'click', '.jarvis__suggestion a', ( e ) => {\r\n\t\t\t\tif ( e.ctrlKey === true || e.currentTarget.getAttribute('data-type') === 'ajax' ) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\t// record the ctrlKey status so we can use it in typeaheads custom triggered events\r\n\t\t\t$( document ).on( 'keydown keyup', '#jarvis-search', ( e ) => {\r\n\t\t\t\tthis.ctrlKey = e.ctrlKey;\r\n\t\t\t} );\r\n\r\n\t\t\t// listen for hotkey\r\n\t\t\t$( document ).on( 'keyup', ( e ) => {\r\n\t\t\t\t// handle esc key - must go before inputFocused check so we can close when jarvis search is focused\r\n\t\t\t\tif ( this.opened && e.key === 'Escape' ) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\tthis.close();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// return if editable field is focused\r\n\t\t\t\tif ( inputFocused() ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// open jarvis\r\n\t\t\t\tif ( ! this.opened && e.key === this.settings.hotkey ) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\treturn this.open();\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\t// showing spinners & adding nonce headers\r\n\t\t\t$( document ).ajaxSend( ( event, jqXHR, settings ) => {\r\n\t\t\t\tif ( this.opened && this.isJarvisUrl( settings.url ) ) {\r\n\t\t\t\t\t// add our loading icon to the UI\r\n\t\t\t\t\tthis.modal.appendChild( this.loading );\r\n\t\t\t\t\t// add our nonce to the header so the rest api considers it a logged in request\r\n\t\t\t\t\tjqXHR.setRequestHeader( 'X-WP-Nonce', this.settings.nonce );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\t// hiding spinners\r\n\t\t\t$( document ).ajaxComplete( ( event, jqXHR, settings ) => {\r\n\t\t\t\tif ( this.opened && this.isJarvisUrl( settings.url ) && this.loading.parentNode ) {\r\n\t\t\t\t\t// hide our loading icon on ajaxComplete\r\n\t\t\t\t\tthis.loading.parentNode.removeChild( this.loading );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\topen() {\r\n\t\t\tthis.opened = true;\r\n\t\t\tdocument.body.appendChild( this.node ); // append our primary node to the body\r\n\r\n\t\t\tthis.$search.typeahead( {\r\n\t\t\t\thint      : true,\r\n\t\t\t\thighlight : true,\r\n\t\t\t\tminLength : 1,\r\n\t\t\t\tclassNames: {\r\n\t\t\t\t\tcursor    : 'jarvis__cursor',\r\n\t\t\t\t\tdataset   : 'jarvis__dataset',\r\n\t\t\t\t\tempty     : 'jarvis__empty',\r\n\t\t\t\t\thighlight : 'jarvis__highlight',\r\n\t\t\t\t\thint      : 'jarvis__hint',\r\n\t\t\t\t\tinput     : 'jarvis__input',\r\n\t\t\t\t\tmenu      : 'jarvis__menu',\r\n\t\t\t\t\topen      : 'jarvis__open',\r\n\t\t\t\t\tselectable: 'jarvis__selectable',\r\n\t\t\t\t\tsuggestion: 'jarvis__suggestion',\r\n\t\t\t\t\twrapper   : 'jarvis__wrap',\r\n\t\t\t\t}\r\n\t\t\t}, {\r\n\t\t\t\tname: 'results',\r\n\t\t\t\tlimit: 10,\r\n\t\t\t\tdisplay: 'title',\r\n\t\t\t\tsource: new Bloodhound( {\r\n\t\t\t\t\tlocal: this.suggestions,\r\n\t\t\t\t\tdatumTokenizer: Bloodhound.tokenizers.obj.whitespace( 'title' ),\r\n\t\t\t\t\tqueryTokenizer: Bloodhound.tokenizers.whitespace,\r\n\t\t\t\t\tremote: {\r\n\t\t\t\t\t\turl: `${this.settings.searchurl}?q=%s`,\r\n\t\t\t\t\t\twildcard: '%s',\r\n\t\t\t\t\t\ttransform: ( response ) => {\r\n\t\t\t\t\t\t\tif ( Array.isArray( response ) ) {\r\n\t\t\t\t\t\t\t\treturn response.map( (data) => new Suggestion( data, 'remote' ) );\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\treturn response;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}\r\n\t\t\t\t} ),\r\n\r\n\t\t\t\ttemplates: {\r\n\t\t\t\t\tsuggestion: ( data ) => templates.suggestion( data ),\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\tthis.$search.on( 'typeahead:select', ( e, item ) => {\r\n\t\t\t\tif ( item.type === 'ajax' ) {\r\n\t\t\t\t\treturn this.ajax( item );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( this.ctrlKey ) {\r\n\t\t\t\t\twindow.open( item.href, '_blank' );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlocation.href = item.href;\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\tthis.$search.on( 'keyup', () => {\r\n\t\t\t\tthis.term = this.search.value;\r\n\t\t\t} );\r\n\r\n\t\t\tthis.$search.typeahead( 'val', this.term );\r\n\t\t\tthis.$search.focus().select();\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclose() {\r\n\t\t\tthis.opened = false;\r\n\t\t\tthis.node.parentNode.removeChild( this.node );\r\n\t\t\tthis.$search.typeahead( 'destroy' );\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoggle() {\r\n\t\t\treturn ( this.opened ) ? this.close() : this.open();\r\n\t\t}\r\n\r\n\t\tajax( item ) {\r\n\t\t\tthis.modal.appendChild( this.loading );\r\n\r\n\t\t\t$.ajax( {\r\n\t\t\t\turl: item.href,\r\n\t\t\t\tsuccess: ( data, status, jqXHR ) => {\r\n\t\t\t\t\tthis.term = '';\r\n\t\t\t\t\tif ( this.loading.parentNode ) {\r\n\t\t\t\t\t\tthis.modal.removeChild( this.loading );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.close();\r\n\t\t\t\t},\r\n\t\t\t\terror: ( jqXHR, status, error ) => {\r\n\t\t\t\t\tif ( this.loading.parentNode ) {\r\n\t\t\t\t\t\tthis.modal.removeChild( this.loading );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t}\r\n\t}\r\n\r\n\treturn Jarvis;\r\n\r\n})( jQuery, _, Bloodhound );\r\n"]}